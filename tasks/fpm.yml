---
- name: "ensure php-fpm packages are installed"
  package:
    name: "{{ item }}"
  with_items: "{{ php_fpm_packages }}"

- name: "ensure php-fpm listens on configured socket"
  lineinfile:
    dest: "{{ php_fpm_pool_file }}"
    regexp: "^;?listen ="
    line: "listen = {{ php_fpm_socket }}"
  when: php_fpm_socket is not none
  notify: "restart php-fpm"

- name: "ensure php-fpm runs as configured user"
  lineinfile:
    dest: "{{ php_fpm_pool_file }}"
    regexp: "^;?user ="
    line: "user = {{ php_fpm_user }}"
  when: php_fpm_user is not none
  notify: "restart php-fpm"

- name: "ensure php-fpm runs as configured group"
  lineinfile:
    dest: "{{ php_fpm_pool_file }}"
    regexp: "^;?group ="
    line: "group = {{ php_fpm_group }}"
  when: php_fpm_group is not none
  notify: "restart php-fpm"

- name: "ensure php-fpm listens as configured user"
  lineinfile:
    dest: "{{ php_fpm_pool_file }}"
    regexp: "^;?listen.owner ="
    line: "listen.owner = {{ php_fpm_user }}"
  when: php_fpm_user is not none
  notify: "restart php-fpm"

- name: "ensure php-fpm config listens as configured group"
  lineinfile:
    dest: "{{ php_fpm_pool_file }}"
    regexp: "^;?listen.group ="
    line: "listen.group = {{ php_fpm_group }}"
  when: php_fpm_group is not none
  notify: "restart php-fpm"

- name: "ensure php-fpm sets environment variables"
  lineinfile:
    dest: "{{ php_fpm_pool_file }}"
    regexp: "^;?env\\[PATH\\] ="
    line: "env[PATH] = /usr/local/bin:/usr/bin:/bin"
  notify: "restart php-fpm"

- name: "ensure php-fpm process manager is configured"
  lineinfile:
    dest: "{{ php_fpm_pool_file }}"
    regexp: "^;?{{ item.config }} ="
    line: "{{ item.config }} = {{ item.value }}"
  when: item.value is defined and item.value is not none
  notify: "restart php-fpm"
  with_items:
    - { config: "pm", value: "{{ php_fpm_pm }}" }
    - { config: "pm.max_children", value: "{{ php_fpm_pm_max_children }}" }
    - { config: "pm.start_servers", value: "{{ php_fpm_pm_start_servers }}" }
    - { config: "pm.min_spare_servers", value: "{{ php_fpm_pm_min_spare_servers }}" }
    - { config: "pm.max_spare_servers", value: "{{ php_fpm_pm_max_spare_servers }}" }
    - { config: "pm.process_idle_timeout", value: "{{ php_fpm_pm_process_idle_timeout }}" }

- name: "ensure php-fpm is enabled and running"
  service:
    name: "{{ php_fpm_service }}"
    state: started
    enabled: yes
